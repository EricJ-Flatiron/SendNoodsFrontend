{"ast":null,"code":"var _jsxFileName = \"/Users/ENJohnson/Development/code/Module5/SendNoods/frontend/src/components/CheckoutForm.js\";\n// import React, { Component } from \"react\";\n// import { CardElement, injectStripe } from \"react-stripe-elements\";\n// class CheckoutForm extends Component {\n//   state = {\n//     complete: false\n//   }\n//   submit = async () => {\n//     let {token} = await this.props.stripe.createToken({name: 'Test'});\n//     let response = await fetch('http://localhost:3001/payment', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type' : 'application/json',\n//         Authorization : `Bearer ${this.props.token}`\n//       },\n//       body: JSON.stringify({\n//         token: token.id,\n//         userId: this.props.userId\n//       })\n//     })\n//     if (response.ok) {\n//       this.setState({\n//         complete: true\n//       })\n//     }\n//   }\n//   render() {\n//     if (this.state.complete) return <h1>Purchase Complete</h1>\n//     return (\n//       <div>\n//         <p>Complete dis ish?</p>\n//         <CardElement/>\n//         <button onClick={this.submit}>Purchase</button>\n//       </div>\n//     )\n//   }\n// }\n// export default injectStripe(CheckoutForm);\nimport React from 'react';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport CardSection from './CardSection';\nexport default function CheckoutForm(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    fetch(\"http://localhost:3001/payment\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${props.token}`\n      }\n    }).then(res => res.json()).then(secretObj => {\n      console.log(secretObj.clientSecret);\n      stripe.confirmCardPayment(secretObj.clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name: 'Jenny Rosen'\n          }\n        }\n      });\n    }); // if (result.error) {\n    //   console.log(result.error.message);\n    // } else {\n    //   if (result.paymentIntent.status === 'succeeded') {\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Confirm order\"));\n}","map":{"version":3,"sources":["/Users/ENJohnson/Development/code/Module5/SendNoods/frontend/src/components/CheckoutForm.js"],"names":["React","useStripe","useElements","CardElement","CardSection","CheckoutForm","props","stripe","elements","handleSubmit","event","preventDefault","fetch","method","headers","Authorization","token","then","res","json","secretObj","console","log","clientSecret","confirmCardPayment","payment_method","card","getElement","billing_details","name"],"mappings":";AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAkD,yBAAlD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACJ,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACD;;AAEDI,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,MAAAA,MAAM,EAAE,MAD6B;AAErCC,MAAAA,OAAO,EAAE;AACP,wBAAiB,kBADV;AAEPC,QAAAA,aAAa,EAAG,UAAST,KAAK,CAACU,KAAM;AAF9B;AAF4B,KAAlC,CAAL,CAOCC,IAPD,CAOMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPb,EAQCF,IARD,CAQMG,SAAS,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,YAAtB;AACAhB,MAAAA,MAAM,CAACiB,kBAAP,CAA2BJ,SAAS,CAACG,YAArC,EAAoD;AAClDE,QAAAA,cAAc,EAAE;AACdC,UAAAA,IAAI,EAAElB,QAAQ,CAACmB,UAAT,CAAoBxB,WAApB,CADQ;AAEdyB,UAAAA,eAAe,EAAE;AACfC,YAAAA,IAAI,EAAE;AADS;AAFH;AADkC,OAApD;AAQD,KAlBD,EAPoC,CA2BpC;AACA;AACA;AACA;AACA;AACA;AACD,GAjCD;;AAmCA,sBACE;AAAM,IAAA,QAAQ,EAAEpB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,QAAQ,EAAE,CAACF,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD","sourcesContent":["// import React, { Component } from \"react\";\n// import { CardElement, injectStripe } from \"react-stripe-elements\";\n\n// class CheckoutForm extends Component {\n  \n//   state = {\n//     complete: false\n//   }\n\n//   submit = async () => {\n//     let {token} = await this.props.stripe.createToken({name: 'Test'});\n//     let response = await fetch('http://localhost:3001/payment', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type' : 'application/json',\n//         Authorization : `Bearer ${this.props.token}`\n//       },\n//       body: JSON.stringify({\n//         token: token.id,\n//         userId: this.props.userId\n//       })\n//     })\n\n//     if (response.ok) {\n//       this.setState({\n//         complete: true\n//       })\n//     }\n//   }\n\n//   render() {\n//     if (this.state.complete) return <h1>Purchase Complete</h1>\n\n//     return (\n//       <div>\n//         <p>Complete dis ish?</p>\n//         <CardElement/>\n//         <button onClick={this.submit}>Purchase</button>\n//       </div>\n//     )\n//   }\n// }\n// export default injectStripe(CheckoutForm);\n\nimport React from 'react';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n\nimport CardSection from './CardSection';\n\nexport default function CheckoutForm(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    fetch(\"http://localhost:3001/payment\", {\n      method: \"POST\",\n      headers: {\n        'Content-Type' : 'application/json',\n        Authorization: `Bearer ${props.token}`\n      }\n    })\n    .then(res => res.json())\n    .then(secretObj => {\n      console.log(secretObj.clientSecret)\n      stripe.confirmCardPayment( secretObj.clientSecret , {\n        payment_method: {\n          card: elements.getElement(CardElement),\n          billing_details: {\n            name: 'Jenny Rosen',\n          },\n        }\n      });\n    })\n\n    // if (result.error) {\n    //   console.log(result.error.message);\n    // } else {\n    //   if (result.paymentIntent.status === 'succeeded') {\n    //   }\n    // }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardSection />\n      <button disabled={!stripe}>Confirm order</button>\n    </form>\n  );\n}"]},"metadata":{},"sourceType":"module"}