{"ast":null,"code":"var _jsxFileName = \"/Users/ENJohnson/Development/code/Module5/SendNoods/frontend/src/components/CheckoutForm.js\";\n// import React, { Component } from \"react\";\n// import { CardElement, injectStripe } from \"react-stripe-elements\";\n// class CheckoutForm extends Component {\n//   state = {\n//     complete: false\n//   }\n//   submit = async () => {\n//     let {token} = await this.props.stripe.createToken({name: 'Test'});\n//     let response = await fetch('http://localhost:3001/payment', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type' : 'application/json',\n//         Authorization : `Bearer ${this.props.token}`\n//       },\n//       body: JSON.stringify({\n//         token: token.id,\n//         userId: this.props.userId\n//       })\n//     })\n//     if (response.ok) {\n//       this.setState({\n//         complete: true\n//       })\n//     }\n//   }\n//   render() {\n//     if (this.state.complete) return <h1>Purchase Complete</h1>\n//     return (\n//       <div>\n//         <p>Complete dis ish?</p>\n//         <CardElement/>\n//         <button onClick={this.submit}>Purchase</button>\n//       </div>\n//     )\n//   }\n// }\n// export default injectStripe(CheckoutForm);\nimport React from 'react';\nimport { useStripe, useElements, CardElement } from '@stripe/react-stripe-js';\nimport CardSection from './CardSection';\nexport default function CheckoutForm(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const clientSecret = \"\"; // stripe.api_key = \"pk_test_51H9voND7h6J7ftZvWesW0Ak9dpg5Q6sKyjwG6KgHgkmToaqJQC7QcS25pr9PRGekpAwIgKIfliVBw71q4IsCApyw00KxLMKKCD\"\n\n  const handleSubmit = async event => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    let {\n      token\n    } = await stripe.createToken(elements.getElement(CardElement), {\n      name: 'Test'\n    });\n    let response = await fetch('http://localhost:3001/secret', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${props.token}`\n      }\n    }).then(res => res.json()).then(chargeObject => {\n      clientSecret = chargeObject.client_secret;\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !stripe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Confirm order\"));\n}","map":{"version":3,"sources":["/Users/ENJohnson/Development/code/Module5/SendNoods/frontend/src/components/CheckoutForm.js"],"names":["React","useStripe","useElements","CardElement","CardSection","CheckoutForm","props","stripe","elements","clientSecret","handleSubmit","event","preventDefault","token","createToken","getElement","name","response","fetch","method","headers","Authorization","then","res","json","chargeObject","client_secret"],"mappings":";AAAA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,WAAnB,EAAgCC,WAAhC,QAAkD,yBAAlD;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAG,EAArB,CAH0C,CAI1C;;AAEA,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AACpC;AACA;AACAA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI,CAACL,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD;;AACD,QAAI;AAACK,MAAAA;AAAD,QAAU,MAAMN,MAAM,CAACO,WAAP,CAAmBN,QAAQ,CAACO,UAAT,CAAoBZ,WAApB,CAAnB,EAAqD;AAACa,MAAAA,IAAI,EAAE;AAAP,KAArD,CAApB;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AACzDC,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAI,UAASf,KAAK,CAACO,KAAM;AAD/B;AAFgD,KAAjC,CAAL,CAMpBS,IANoB,CAMfC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANQ,EAOpBF,IAPoB,CAOfG,YAAY,IAAI;AACpBhB,MAAAA,YAAY,GAAGgB,YAAY,CAACC,aAA5B;AACD,KAToB,CAArB;AAUD,GArBD;;AAuBA,sBACE;AAAM,IAAA,QAAQ,EAAEhB,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,QAAQ,EAAE,CAACH,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF;AAMD","sourcesContent":["// import React, { Component } from \"react\";\n// import { CardElement, injectStripe } from \"react-stripe-elements\";\n\n// class CheckoutForm extends Component {\n  \n//   state = {\n//     complete: false\n//   }\n\n//   submit = async () => {\n//     let {token} = await this.props.stripe.createToken({name: 'Test'});\n//     let response = await fetch('http://localhost:3001/payment', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type' : 'application/json',\n//         Authorization : `Bearer ${this.props.token}`\n//       },\n//       body: JSON.stringify({\n//         token: token.id,\n//         userId: this.props.userId\n//       })\n//     })\n\n//     if (response.ok) {\n//       this.setState({\n//         complete: true\n//       })\n//     }\n//   }\n\n//   render() {\n//     if (this.state.complete) return <h1>Purchase Complete</h1>\n\n//     return (\n//       <div>\n//         <p>Complete dis ish?</p>\n//         <CardElement/>\n//         <button onClick={this.submit}>Purchase</button>\n//       </div>\n//     )\n//   }\n// }\n// export default injectStripe(CheckoutForm);\n\nimport React from 'react';\nimport {useStripe, useElements, CardElement} from '@stripe/react-stripe-js';\n\nimport CardSection from './CardSection';\n\nexport default function CheckoutForm(props) {\n  const stripe = useStripe();\n  const elements = useElements();\n  const clientSecret = \"\";\n  // stripe.api_key = \"pk_test_51H9voND7h6J7ftZvWesW0Ak9dpg5Q6sKyjwG6KgHgkmToaqJQC7QcS25pr9PRGekpAwIgKIfliVBw71q4IsCApyw00KxLMKKCD\"\n\n  const handleSubmit = async (event) => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    let {token} = await stripe.createToken(elements.getElement(CardElement), {name: 'Test'});\n    let response = await fetch('http://localhost:3001/secret', {\n      method: 'GET',\n      headers: {\n        Authorization : `Bearer ${props.token}`\n      }\n    })\n    .then(res => res.json())\n    .then(chargeObject => {\n      clientSecret = chargeObject.client_secret;\n    })\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardSection />\n      <button disabled={!stripe}>Confirm order</button>\n    </form>\n  );\n}"]},"metadata":{},"sourceType":"module"}